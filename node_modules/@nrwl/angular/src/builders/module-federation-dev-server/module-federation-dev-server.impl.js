"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.moduleFederationDevServer = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const ngcli_adapter_1 = require("nx/src/adapter/ngcli-adapter");
const architect_1 = require("@angular-devkit/architect");
const path_1 = require("path");
const webpack_server_impl_1 = require("../webpack-server/webpack-server.impl");
function moduleFederationDevServer(schema, context) {
    const workspaces = new devkit_1.Workspaces(context.workspaceRoot);
    const workspaceConfig = workspaces.readWorkspaceConfiguration();
    const p = workspaceConfig.projects[context.target.project];
    const mfConfigPath = (0, path_1.join)(context.workspaceRoot, p.root, 'module-federation.config.js');
    let mfeConfig;
    try {
        mfeConfig = require(mfConfigPath);
    }
    catch (_a) {
        throw new Error(`Could not load ${mfConfigPath}. Was this project generated with "@nrwl/angular:host"?`);
    }
    const options = tslib_1.__rest(schema, []);
    const unparsedRemotes = mfeConfig.remotes.length > 0 ? mfeConfig.remotes : [];
    const remotes = unparsedRemotes.map((a) => (Array.isArray(a) ? a[0] : a));
    const devServeRemotes = !options.devRemotes
        ? []
        : Array.isArray(options.devRemotes)
            ? options.devRemotes
            : [options.devRemotes];
    for (const remote of remotes) {
        const isDev = devServeRemotes.includes(remote);
        (0, ngcli_adapter_1.scheduleTarget)(context.workspaceRoot, {
            project: remote,
            target: isDev ? 'serve' : 'serve-static',
            configuration: context.target.configuration,
            runOptions: {},
            executor: context.builder.builderName,
        }, options.verbose);
    }
    return (0, webpack_server_impl_1.webpackServer)(options, context);
}
exports.moduleFederationDevServer = moduleFederationDevServer;
exports.default = (0, architect_1.createBuilder)(moduleFederationDevServer);
//# sourceMappingURL=module-federation-dev-server.impl.js.map